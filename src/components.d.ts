/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */

import '@stencil/core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;
    componentOnReady(done: (ele?: this) => void): void;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}

import 'ionicons';
import '@ionic/core';
import '@stencil/router';


declare global {
  interface HTMLMailingListElement extends HTMLStencilElement {

  }
  var HTMLMailingListElement: {
    prototype: HTMLMailingListElement;
    new (): HTMLMailingListElement;
  };
  interface HTMLElementTagNameMap {
    'mailing-list': HTMLMailingListElement;
  }
  interface ElementTagNameMap {
    'mailing-list': HTMLMailingListElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'mailing-list': JSXElements.MailingListAttributes;
    }
  }
  namespace JSXElements {
    export interface MailingListAttributes extends HTMLAttributes {

    }
  }
}


declare global {
  interface HTMLThAboutBodyContentElement extends HTMLStencilElement {

  }
  var HTMLThAboutBodyContentElement: {
    prototype: HTMLThAboutBodyContentElement;
    new (): HTMLThAboutBodyContentElement;
  };
  interface HTMLElementTagNameMap {
    'th-about-body-content': HTMLThAboutBodyContentElement;
  }
  interface ElementTagNameMap {
    'th-about-body-content': HTMLThAboutBodyContentElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'th-about-body-content': JSXElements.ThAboutBodyContentAttributes;
    }
  }
  namespace JSXElements {
    export interface ThAboutBodyContentAttributes extends HTMLAttributes {

    }
  }
}


declare global {
  interface HTMLThAboutMainContentElement extends HTMLStencilElement {

  }
  var HTMLThAboutMainContentElement: {
    prototype: HTMLThAboutMainContentElement;
    new (): HTMLThAboutMainContentElement;
  };
  interface HTMLElementTagNameMap {
    'th-about-main-content': HTMLThAboutMainContentElement;
  }
  interface ElementTagNameMap {
    'th-about-main-content': HTMLThAboutMainContentElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'th-about-main-content': JSXElements.ThAboutMainContentAttributes;
    }
  }
  namespace JSXElements {
    export interface ThAboutMainContentAttributes extends HTMLAttributes {

    }
  }
}


declare global {
  interface HTMLThAboutPageElement extends HTMLStencilElement {

  }
  var HTMLThAboutPageElement: {
    prototype: HTMLThAboutPageElement;
    new (): HTMLThAboutPageElement;
  };
  interface HTMLElementTagNameMap {
    'th-about-page': HTMLThAboutPageElement;
  }
  interface ElementTagNameMap {
    'th-about-page': HTMLThAboutPageElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'th-about-page': JSXElements.ThAboutPageAttributes;
    }
  }
  namespace JSXElements {
    export interface ThAboutPageAttributes extends HTMLAttributes {

    }
  }
}


declare global {
  interface HTMLThArchitectureProcessElement extends HTMLStencilElement {

  }
  var HTMLThArchitectureProcessElement: {
    prototype: HTMLThArchitectureProcessElement;
    new (): HTMLThArchitectureProcessElement;
  };
  interface HTMLElementTagNameMap {
    'th-architecture-process': HTMLThArchitectureProcessElement;
  }
  interface ElementTagNameMap {
    'th-architecture-process': HTMLThArchitectureProcessElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'th-architecture-process': JSXElements.ThArchitectureProcessAttributes;
    }
  }
  namespace JSXElements {
    export interface ThArchitectureProcessAttributes extends HTMLAttributes {

    }
  }
}


declare global {
  interface HTMLThEngineeringProcessElement extends HTMLStencilElement {

  }
  var HTMLThEngineeringProcessElement: {
    prototype: HTMLThEngineeringProcessElement;
    new (): HTMLThEngineeringProcessElement;
  };
  interface HTMLElementTagNameMap {
    'th-engineering-process': HTMLThEngineeringProcessElement;
  }
  interface ElementTagNameMap {
    'th-engineering-process': HTMLThEngineeringProcessElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'th-engineering-process': JSXElements.ThEngineeringProcessAttributes;
    }
  }
  namespace JSXElements {
    export interface ThEngineeringProcessAttributes extends HTMLAttributes {

    }
  }
}


declare global {
  interface HTMLThFooterLinksElement extends HTMLStencilElement {

  }
  var HTMLThFooterLinksElement: {
    prototype: HTMLThFooterLinksElement;
    new (): HTMLThFooterLinksElement;
  };
  interface HTMLElementTagNameMap {
    'th-footer-links': HTMLThFooterLinksElement;
  }
  interface ElementTagNameMap {
    'th-footer-links': HTMLThFooterLinksElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'th-footer-links': JSXElements.ThFooterLinksAttributes;
    }
  }
  namespace JSXElements {
    export interface ThFooterLinksAttributes extends HTMLAttributes {

    }
  }
}


declare global {
  interface HTMLThFooterMailingListElement extends HTMLStencilElement {

  }
  var HTMLThFooterMailingListElement: {
    prototype: HTMLThFooterMailingListElement;
    new (): HTMLThFooterMailingListElement;
  };
  interface HTMLElementTagNameMap {
    'th-footer-mailing-list': HTMLThFooterMailingListElement;
  }
  interface ElementTagNameMap {
    'th-footer-mailing-list': HTMLThFooterMailingListElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'th-footer-mailing-list': JSXElements.ThFooterMailingListAttributes;
    }
  }
  namespace JSXElements {
    export interface ThFooterMailingListAttributes extends HTMLAttributes {

    }
  }
}


declare global {
  interface HTMLThFooterElement extends HTMLStencilElement {

  }
  var HTMLThFooterElement: {
    prototype: HTMLThFooterElement;
    new (): HTMLThFooterElement;
  };
  interface HTMLElementTagNameMap {
    'th-footer': HTMLThFooterElement;
  }
  interface ElementTagNameMap {
    'th-footer': HTMLThFooterElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'th-footer': JSXElements.ThFooterAttributes;
    }
  }
  namespace JSXElements {
    export interface ThFooterAttributes extends HTMLAttributes {

    }
  }
}


declare global {
  interface HTMLThGenericProcessElement extends HTMLStencilElement {
    'bodyContent': string;
    'buttonClass': string;
    'imagePath': string;
    'titleClass': string;
    'titleText': string;
  }
  var HTMLThGenericProcessElement: {
    prototype: HTMLThGenericProcessElement;
    new (): HTMLThGenericProcessElement;
  };
  interface HTMLElementTagNameMap {
    'th-generic-process': HTMLThGenericProcessElement;
  }
  interface ElementTagNameMap {
    'th-generic-process': HTMLThGenericProcessElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'th-generic-process': JSXElements.ThGenericProcessAttributes;
    }
  }
  namespace JSXElements {
    export interface ThGenericProcessAttributes extends HTMLAttributes {
      'bodyContent'?: string;
      'buttonClass'?: string;
      'imagePath'?: string;
      'titleClass'?: string;
      'titleText'?: string;
    }
  }
}


declare global {
  interface HTMLThGoodHandsElement extends HTMLStencilElement {

  }
  var HTMLThGoodHandsElement: {
    prototype: HTMLThGoodHandsElement;
    new (): HTMLThGoodHandsElement;
  };
  interface HTMLElementTagNameMap {
    'th-good-hands': HTMLThGoodHandsElement;
  }
  interface ElementTagNameMap {
    'th-good-hands': HTMLThGoodHandsElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'th-good-hands': JSXElements.ThGoodHandsAttributes;
    }
  }
  namespace JSXElements {
    export interface ThGoodHandsAttributes extends HTMLAttributes {

    }
  }
}


declare global {
  interface HTMLThHeaderElement extends HTMLStencilElement {

  }
  var HTMLThHeaderElement: {
    prototype: HTMLThHeaderElement;
    new (): HTMLThHeaderElement;
  };
  interface HTMLElementTagNameMap {
    'th-header': HTMLThHeaderElement;
  }
  interface ElementTagNameMap {
    'th-header': HTMLThHeaderElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'th-header': JSXElements.ThHeaderAttributes;
    }
  }
  namespace JSXElements {
    export interface ThHeaderAttributes extends HTMLAttributes {

    }
  }
}


declare global {
  interface HTMLThLandingPageElement extends HTMLStencilElement {

  }
  var HTMLThLandingPageElement: {
    prototype: HTMLThLandingPageElement;
    new (): HTMLThLandingPageElement;
  };
  interface HTMLElementTagNameMap {
    'th-landing-page': HTMLThLandingPageElement;
  }
  interface ElementTagNameMap {
    'th-landing-page': HTMLThLandingPageElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'th-landing-page': JSXElements.ThLandingPageAttributes;
    }
  }
  namespace JSXElements {
    export interface ThLandingPageAttributes extends HTMLAttributes {

    }
  }
}


declare global {
  interface HTMLThLandingTeamElement extends HTMLStencilElement {

  }
  var HTMLThLandingTeamElement: {
    prototype: HTMLThLandingTeamElement;
    new (): HTMLThLandingTeamElement;
  };
  interface HTMLElementTagNameMap {
    'th-landing-team': HTMLThLandingTeamElement;
  }
  interface ElementTagNameMap {
    'th-landing-team': HTMLThLandingTeamElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'th-landing-team': JSXElements.ThLandingTeamAttributes;
    }
  }
  namespace JSXElements {
    export interface ThLandingTeamAttributes extends HTMLAttributes {

    }
  }
}


declare global {
  interface HTMLThMainContentElement extends HTMLStencilElement {

  }
  var HTMLThMainContentElement: {
    prototype: HTMLThMainContentElement;
    new (): HTMLThMainContentElement;
  };
  interface HTMLElementTagNameMap {
    'th-main-content': HTMLThMainContentElement;
  }
  interface ElementTagNameMap {
    'th-main-content': HTMLThMainContentElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'th-main-content': JSXElements.ThMainContentAttributes;
    }
  }
  namespace JSXElements {
    export interface ThMainContentAttributes extends HTMLAttributes {

    }
  }
}


declare global {
  interface HTMLThSiteElement extends HTMLStencilElement {

  }
  var HTMLThSiteElement: {
    prototype: HTMLThSiteElement;
    new (): HTMLThSiteElement;
  };
  interface HTMLElementTagNameMap {
    'th-site': HTMLThSiteElement;
  }
  interface ElementTagNameMap {
    'th-site': HTMLThSiteElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'th-site': JSXElements.ThSiteAttributes;
    }
  }
  namespace JSXElements {
    export interface ThSiteAttributes extends HTMLAttributes {

    }
  }
}


declare global {
  interface HTMLThTrainingProcessElement extends HTMLStencilElement {

  }
  var HTMLThTrainingProcessElement: {
    prototype: HTMLThTrainingProcessElement;
    new (): HTMLThTrainingProcessElement;
  };
  interface HTMLElementTagNameMap {
    'th-training-process': HTMLThTrainingProcessElement;
  }
  interface ElementTagNameMap {
    'th-training-process': HTMLThTrainingProcessElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'th-training-process': JSXElements.ThTrainingProcessAttributes;
    }
  }
  namespace JSXElements {
    export interface ThTrainingProcessAttributes extends HTMLAttributes {

    }
  }
}


declare global {
  interface HTMLThWhatWeDoElement extends HTMLStencilElement {

  }
  var HTMLThWhatWeDoElement: {
    prototype: HTMLThWhatWeDoElement;
    new (): HTMLThWhatWeDoElement;
  };
  interface HTMLElementTagNameMap {
    'th-what-we-do': HTMLThWhatWeDoElement;
  }
  interface ElementTagNameMap {
    'th-what-we-do': HTMLThWhatWeDoElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'th-what-we-do': JSXElements.ThWhatWeDoAttributes;
    }
  }
  namespace JSXElements {
    export interface ThWhatWeDoAttributes extends HTMLAttributes {

    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }
